name: Go Build & Docker Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
      - src/**/*
      - .github/workflows/**

permissions:
  contents: read

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    strategy:
      matrix:
        folder:
          - example
          - otelprovider
          - otelzap

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ matrix.folder }}/go.mod"
          cache: true
          cache-dependency-path: "${{ matrix.folder }}/*.sum"

      - name: Run Go Build
        working-directory: "${{ matrix.folder }}/"
        run: go build -v "./..."

      - name: GolangCI Lint
        uses: golangci/golangci-lint-action@v7
        with:
          working-directory: "${{ matrix.folder }}/"
          version: latest

      - name: StaticCheck
        uses: dominikh/staticcheck-action@v1
        with:
          working-directory: "${{ matrix.folder }}/"
          version: latest

      - name: Run format-check
        working-directory: "${{ matrix.folder }}/"
        run: |
          UNFORMATTED=$(gofmt -l .)
          if [ -n "$UNFORMATTED" ]; then
            echo "The following files are not formatted according to gofmt:"
            echo "$UNFORMATTED"
            exit 1
          fi
